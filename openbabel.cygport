################################
WX_VERSION=3.0
#echo "WX_VERSION: ${WX_VERSION}"

################################
PY_VER=3.8
PY_VER_SHORT=${PY_VER//./}
PY_VER_MAJOR=${PY_VER%%.*}
#echo "PY_VER: ${PY_VER}"
#echo "PY_VER_SHORT: ${PY_VER_SHORT}"
#echo "PY_VER_MAJOR: ${PY_VER_MAJOR}"

################################
inherit perl python3 ruby cmake wxwidgets # java mono

################################

NAME=openbabel
VERSION=3.1.1p36
RELEASE=2

################################
CATEGORY="Science"
SUMMARY="Open Babel chemistry toolkit"
DESCRIPTION="Open Babel is a chemical toolbox designed to speak the many
languages of chemical data. It's an open, collaborative project allowing
anyone to search, convert, analyze, or store data from molecular modeling,
chemistry, solid-state materials, biochemistry, or related areas."
HOMEPAGE="http://openbabel.org/"

################################
## Source from a git repository
################################
GIT_REPO="https://github.com/openbabel/openbabel"
declare -A GIT_DATEHASH_BY_NAME=(
  # git log --date=iso-strict --format='%cd/%H' -1
  [3.1.1p36]=2020-11-02T16:18:17-05:00/9c001b5aeb8b985f26d111d811673150607662fa
  [3.1.1]=2020-05-08T11:38:02-04:00/cbd4db43f8908b874864280fdc03bf92569eebc1
)
REV_HASH="${GIT_DATEHASH_BY_NAME[${VERSION}]#*/}"
REV_DATE="${GIT_DATEHASH_BY_NAME[${VERSION}]%/*}"
REV_DATE_SHORT="${GIT_DATEHASH_BY_NAME[${VERSION}]%T*}"
GIT_BASENAME="${GIT_REPO##*/}"
SRC_URI="${GIT_REPO}/archive/${REV_HASH}.tar.gz"   # GitHub
#SRC_URI="${GIT_REPO}/-/archive/${REV_HASH}/${GIT_BASENAME}-${REV_HASH}.tar.bz2" # GitLab
SRC_DIR="${GIT_BASENAME}-${REV_HASH}"

################################
## ABI for openbabel
ABI=7
################################

################################
## Settings for CMake
################################
if [ -n "${NO_NINJA}" ]; then
  MAKEOPTS=-j1
  CYGCMAKE_GENERATOR="Unix Makefiles"
fi

CYGCMAKE_ARGS="
  -DCYGWIN:BOOL=ON
  -DBUILD_SHARED:BOOL=ON
  -DRUN_SWIG:BOOL=ON
\
  -DBUILD_GUI:BOOL=ON
  -DwxWidgets_CONFIG_EXECUTABLE=${WX_CONFIG}
  -DwxWidgets_wxrc_EXECUTABLE=${WXRC}
\
  -DPYTHON_BINDINGS:BOOL=ON
  -DPYTHON_EXECUTABLE=/usr/bin/python${PY_VER}
  -DRUBY_BINDINGS:BOOL=ON
  -DPHP_BINDINGS:BOOL=OFF
  -DPERL_BINDINGS:BOOL=ON
  -DJAVA_BINDINGS:BOOL=OFF
  -DCSHARP_BINDINGS:BOOL=OFF
  -DR_BINDINGS:BOOL=OFF
  -DPERL_INSTDIR=${PERL_VENDORARCH}
  -DRUBY_INSTDIR=${RUBY_VENDORARCH}
"

################################
## Requirements for building
################################
BUILD_REQUIRES="\
  pkg-config\
  cygwin-devel\
  gcc-fortran\
  libtool\
  ninja\
\
  libmaeparser-devel\
  libcoordgen-devel\
  rapidjson-devel\
\
  swig\
  eigen3\
\
  perl\
  libnsl-devel\
\
  ruby\
\
  libreadline-devel\
  libintl-devel\
  libxml2-devel\
  libiconv-devel\
  zlib-devel\
\
  libcairo-devel\
  libfreetype-devel\
\
  libgif-devel\
  libjpeg-devel\
  libpng-devel\
  libtiff-devel\
\
  libX11-devel\
  libXft-devel\
  libXi-devel\
\
  libwx_baseu3.0-devel\
  libwx_gtk3u3.0-devel\
  libpango1.0-devel\
\
  python3-devel\
  python38-devel\
\
  ruby-devel\
"
################################
## Patch files
################################
# Patch filenames are in a default style of 'git format-patch'
PATCH_URI=$(\
  find -maxdepth 1 -type f -name '[0-9][0-9][0-9][0-9]-*.patch' \
  | sort \
)
# Additional patches, if any
PATCH_URI+="
"

################################
## Contents of our packages
################################
# main package
THIS_PN="${NAME}"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_CONTENTS" "%s" "\
  --exclude=usr/bin/obgui.exe\
  --exclude=usr/share/man/man1/obgui.1.gz\
  --exclude=*.dll\
  usr/bin/\
  usr/share/man/\
  usr/share/doc/\
"
#  etc/
#  usr/share/applications/
#  usr/share/metainfo/
printf -v "${THIS_VN}_REQUIRES" "%s" "\
"

################################
# GUI package
THIS_PN="${NAME}-gui"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_CONTENTS" "%s" "\
  usr/bin/obgui.exe\
  usr/share/man/man1/obgui.1.gz\
"
printf -v "${THIS_VN}_REQUIRES" "%s" "\
  ${NAME}\
"

################################
# Runtime libraries
THIS_PN="lib${NAME}${ABI}"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_SUMMARY"  "%s" "${SUMMARY% *} (runtime)"
printf -v "${THIS_VN}_CONTENTS" "%s" "\
  --exclude=usr/bin/cyginchi*.dll\
  usr/bin/*.dll\
  usr/lib/openbabel/\
  usr/share/openbabel/\
"
printf -v "${THIS_VN}_REQUIRES" "%s" "\
"

################################
# Devel
THIS_PN="lib${NAME}-devel"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_SUMMARY"  "%s" "${SUMMARY% *} (devel)"
printf -v "${THIS_VN}_CONTENTS" "%s" "\
  --exclude=usr/include/inchi/*\
  --exclude=usr/lib/libinchi.dll.a\
  usr/include/\
  usr/lib/cmake/\
  usr/lib/pkgconfig/\
  usr/lib/lib*.dll.a\
"
printf -v "${THIS_VN}_REQUIRES" "%s" "\
"

################################
# libinchi-devel
THIS_PN="libinchi-devel"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_SUMMARY"  "%s" "IUPAC International Chemical Identifier library (development)"
printf -v "${THIS_VN}_CONTENTS" "%s" "usr/include/inchi/ usr/lib/libinchi.dll.a"

################################
# libinchi0
THIS_PN="libinchi0"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_SUMMARY"  "%s" "IUPAC International Chemical Identifier library (runtime)"
printf -v "${THIS_VN}_CONTENTS" "%s" "usr/bin/cyginchi-0.dll"

################################
# Python bindings
THIS_PN="python${PY_VER_SHORT}-${NAME}"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_SUMMARY"  "%s" "${SUMMARY% *} (Python ${PY_VER} bindings)"
printf -v "${THIS_VN}_CONTENTS" "%s" "\
  usr/lib/python${PY_VER}/ \
"
printf -v "${THIS_VN}_REQUIRES" "%s" "\
"

################################
# Perl bindings
THIS_PN="perl-Chemistry-OpenBabel"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_CATEGORY" "%s" "Perl"
printf -v "${THIS_VN}_SUMMARY"  "%s" "${SUMMARY% *} (Perl bindings)"
printf -v "${THIS_VN}_CONTENTS" "%s" "\
  ${PERL_VENDORARCH#/}\
"
printf -v "${THIS_VN}_REQUIRES" "%s" "\
"

################################
# Ruby bindings
THIS_PN="ruby-openbabel"
THIS_VN=${THIS_PN//[-+\.]/_}
PKG_NAMES+=" ${THIS_PN}"

printf -v "${THIS_VN}_CATEGORY" "%s" "Ruby"
printf -v "${THIS_VN}_SUMMARY"  "%s" "${SUMMARY% *} (Ruby bindings)"
printf -v "${THIS_VN}_CONTENTS" "%s" "\
  ${RUBY_VENDORARCH#/}\
"
printf -v "${THIS_VN}_REQUIRES" "%s" "\
"

################################
DIFF_EXCLUDES="\
  -x external \
  -x scripts \
"

################################
# The default src_test function defined in lib/src_test.cygpart
src_test() {
        cd ${B}
        cygtest
}

################################
